services:
  gui-tools-service:
    build:
      context: gui-based-tools-docker
      dockerfile: Dockerfile
    image: gui-tools-docker:latest
    container_name: gui-tools-container
    hostname: gui-tools-service

    # GPU support for graphics-intensive work
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=9876
      - QGIS_MCP_HOST=0.0.0.0
      - QGIS_MCP_PORT=9877
      - PBR_MCP_HOST=0.0.0.0
      - PBR_MCP_PORT=9878

    ports:
      - "5901:5901"   # VNC port
      - "9876:9876"   # MCP Blender port
      - "9877:9877"   # MCP QGIS port
      - "9878:9878"   # MCP PBR Generator port

    # Health check ensures all three services are ready
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9876 && nc -z localhost 9877 && nc -z localhost 9878"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    # Restart policy
    restart: unless-stopped

    networks:
      - docker_ragflow

  multi-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    image: multi-agent-docker:latest
    container_name: multi-agent-container

    # GPU support (uncomment if you have NVIDIA GPU)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

    environment:
      - DISPLAY=:99
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - PYTHONUNBUFFERED=1
      - BLENDER_HOST=gui-tools-service
      - BLENDER_PORT=9876
      - QGIS_HOST=gui-tools-service
      - QGIS_PORT=9877
      - PBR_HOST=gui-tools-service
      - PBR_PORT=9878
      # MCP TCP Server Configuration (NEW)
      - MCP_TCP_AUTOSTART=true
      - MCP_TCP_PORT=9500
      - MCP_ENABLE_TCP=true
      - MCP_ENABLE_UNIX=false
      - MCP_LOG_LEVEL=info
      - MCP_HEALTH_PORT=9501

    ports:
      - "3000:3000"    # Claude Flow UI
      - "3002:3002"    # WebSocket Bridge (existing)
      - "9500:9500"    # MCP TCP Server (NEW)
      - "9501:9501"    # MCP Health Check (NEW)

    volumes:
      - ./workspace:/workspace
      - ./blender-files:/blender-files
      - ./pbr_outputs:/workspace/pbr_outputs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${EXTERNAL_DIR:-./.agent-mount/ext}:/workspace/ext
      # For Unix socket support (optional)
      - mcp-sockets:/var/run/mcp

    # Run in interactive mode by default
    command: ["--interactive"]

    # Keep stdin open and allocate a pseudo-TTY
    stdin_open: true
    tty: true

    # Security options
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    cap_add:
      - SYS_PTRACE

    # Resource limits
    mem_limit: ${DOCKER_MEMORY:-16g}
    cpus: "${DOCKER_CPUS:-4}"

    # Health check for both WebSocket and TCP
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9501/health || curl -f http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


    # Restart policy
    restart: unless-stopped

    networks:
      - docker_ragflow

networks:
  docker_ragflow:
    name: docker_ragflow
    external: true

volumes:
  workspace:
  blender-files:
  mcp-sockets:
    driver: local